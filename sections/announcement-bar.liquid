{{ 'component-slideshow.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign bg_color = section.settings.bg_colour

  assign social_icons = true
  if settings.social_facebook_link == blank and settings.social_instagram_link == blank and settings.social_youtube_link == blank and settings.social_tiktok_link == blank and settings.social_twitter_link == blank and settings.social_pinterest_link == blank and settings.social_snapchat_link == blank and settings.social_tumblr_link == blank and settings.social_vimeo_link == blank
    assign social_icons = false
  endif
  if section.settings.enable_country_selector or section.settings.enable_language_selector
    assign language_country_selector = true
  endif
  if section.blocks.size > 0
    assign announcement_bar = true
  endif
-%}

{% if social_icons %}
  {{ 'component-list-social.css' | asset_url | stylesheet_tag }}
{% endif %}

<style>
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
</style>

<div
  class="utility-bar color {{bg_color }} h-15 gradient{% if section.settings.show_line_separator and section.blocks.size > 0 %} utility-bar--bottom-border{% elsif section.settings.show_line_separator and section.settings.show_social and social_icons%} utility-bar--bottom-border-social-only{% endif %}{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header-localization{% endif %}"
  {{ block.shopify_attributes }}
>
  <div class="page-width utility-bar__grid{% if announcement_bar and language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--3-col{% elsif language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--2-col{% endif %}">
    {%- if section.settings.show_social and social_icons -%}
      {%- render 'social-icons' -%}
    {%- endif -%}
    {%- if section.blocks.size > 1 -%}
      <slideshow-component
        class="announcement-bar"
        role="region"
        aria-roledescription="{{ 'sections.announcements.carousel' | t }}"
        aria-label="{{ 'sections.announcements.announcement_bar' | t }}"
      >
        <div class="announcement-bar-slider slider-buttons">
          <button
            type="button"
            class="slider-button slider-button--prev !hidden"
            name="previous"
            aria-label="{{ 'sections.announcements.previous_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
          <div
            class="flex overflow-x-auto no-scrollbar scroll-snap-x mandatory smooth"
            id="Slider-{{ section.id }}"
            aria-live="polite"
            aria-atomic="true"
            data-autoplay="{{ section.settings.auto_rotate }}"
            data-speed="{{ section.settings.change_slides_speed }}"
          >
          {% endif %}
            {%- for block in section.blocks -%}
              <div
                class="flex-shrink-0 snap-start py-4 px-4 w-full mx-auto justify-center"
                id="Slide-{{ section.id }}-{{ forloop.index }}"
                {{ block.shopify_attributes }}
                role="group"
                aria-roledescription="{{ 'sections.announcements.announcement' | t }}"
                aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                tabindex="-1"
              >
                {% case block.type %}
                  {% when "text" %}
                      <div
                        class="announcement-bar__announcement"
                        role="region"
                        aria-label="{{ 'sections.header.announcement' | t }}"
                        {{ block.shopify_attributes }}
                      >
                        {%- if block.settings.text != blank -%}
                          {%- if block.settings.link != blank -%}
                            <a
                              href="{{ block.settings.link }}"
                              class="announcement-bar__link link link--text focus-inset animate-arrow"
                            >
                          {%- endif -%}
                          <p class="font-medium font-body text-bg text-xl announcement-bar__message h5">
                            <span>{{ block.settings.text | escape }}</span>
                            {%- if block.settings.link != blank -%}
                              {{- 'icon-arrow.svg' | inline_asset_content -}}
                            {%- endif -%}
                          </p>
                          {%- if block.settings.link != blank -%}
                            </a>
                          {%- endif -%}
                        {%- endif -%}
                      </div>
                  {% when "countdown" %}
                    <script>
                      var year = {{ block.settings.year }}
                      var month = {{ block.settings.month }} - 1
                      var day = {{ block.settings.day }}
                      var hour = {{ block.settings.hour }}
                      var minute = {{ block.settings.min }}
                      var sec = {{ block.settings.sec }}
                      var reset_days = {{ block.settings.reset }}

                      function calculateNextTargetDate() {
                        var now = new Date();
                        var utcTime = now.getTime() + now.getTimezoneOffset() * 60000; 
                        var sgtTime = new Date(utcTime + 8 * 3600000);
                    
                        var initialTargetDate = new Date(year, month, day, hour, minute, sec);
                    
                        while (initialTargetDate <= sgtTime) {
                          initialTargetDate.setDate(initialTargetDate.getDate() + reset_days);
                        }
                    
                        return initialTargetDate;
                      }
                    
                      function updateCountdown() {
                        var targetDate = calculateNextTargetDate();
                    
                        var now = new Date();
                        var utcTime = now.getTime() + now.getTimezoneOffset() * 60000; 
                        var sgtTime = new Date(utcTime + 8 * 3600000);
                        
                        var timeDifference = targetDate - sgtTime;
                    
                        if (timeDifference <= 0) {
                          document.getElementById("days-cd").textContent = "00";
                          document.getElementById("hours-cd").textContent = "00";
                          document.getElementById("mins-cd").textContent = "00";
                          document.getElementById("secs-cd").textContent = "00";
                          return;
                        }
                    
                        var days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
                        var hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                        var minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));
                        var seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);
                    
                        document.getElementById("days-cd").textContent = days.toString().padStart(2, "0");
                        document.getElementById("hours-cd").textContent = hours.toString().padStart(2, "0");
                        document.getElementById("mins-cd").textContent = minutes.toString().padStart(2, "0");
                        document.getElementById("secs-cd").textContent = seconds.toString().padStart(2, "0");
                      }
                    
                      setInterval(updateCountdown, 1000);
                    
                      updateCountdown();
                    </script>
                    <div class = "flex flex-col justify-center items-center">
                      <span class = "font-body font-bold text-bg text-3xl md:text-4xl uppercase">{{ block.settings.text }}</span>
                      <div class = "flex w-full justify-center items-center">
                        {%- if block.settings.link != blank -%}
                          <a
                            href="{{ block.settings.link }}"
                            class="announcement-bar__link link link--text focus-inset animate-arrow"
                          >
                        {%- endif -%}
                        <div class = "flex flex-col items-end">
                          <span class = "font-body font-bold text-bg text-base">Sale ends in:</span>
                        </div>
                        <div class = "flex flex-col items-center mx-8">
                          <span class = "font-body font-bold text-bg text-3xl md:text-4xl" id = "days-cd">00</span>
                          <span class = "font-body font-bold text-bg text-sm md:text-base">DAYS</span>
                        </div>
                        <span class = "font-display text-bg text-5xl">:</span>
                        <div class = "flex flex-col items-center mx-8">
                          <span class = "font-body font-bold text-bg text-3xl md:text-4xl" id = "hours-cd">00</span>
                          <span class = "font-body font-bold text-bg text-sm md:text-base">HOURS</span>
                        </div>
                        <span class = "font-display text-bg text-5xl">:</span>
                        <div class = "flex flex-col items-center mx-8">
                          <span class = "font-body font-bold text-bg text-3xl md:text-4xl" id = "mins-cd">00</span>
                          <span class = "font-body font-bold text-bg text-sm md:text-base">MINUTES</span>
                        </div>
                        <span class = "font-display text-bg text-5xl">:</span>
                        <div class = "flex flex-col items-center ml-8 ">
                          <span class = "font-body font-bold text-bg text-3xl md:text-4xl" id = "secs-cd">00</span>
                          <span class = "font-body font-bold text-bg text-sm md:text-base">SECONDS</span>
                        </div>
                        {%- if block.settings.link != blank -%}
                          </a>
                        {%- endif -%}
                      </div>
                    </div>
                {% endcase %}
              </div>
            {%- endfor -%}
          {% if section.blocks.size > 1 %}
          </div>
          <button
            type="button"
            class="slider-button slider-button--next !hidden"
            name="next"
            aria-label="{{ 'sections.announcements.next_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
        </div>
      </slideshow-component>
    {% endif %}
    {%- if request.design_mode -%}
      <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
      <style>
        /* theme editor power preview fix */
        .announcement-bar-slider .slider__slide[aria-hidden='true'] {
          visibility: hidden;
        }
      </style>
    {%- endif -%}
    <div class="localization-wrapper">
      {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
        <localization-form class="small-hide medium-hide">
          {%- form 'localization', id: 'AnnouncementCountryForm', class: 'localization-form' -%}
            <div>
              <h2 class="visually-hidden" id="AnnouncementCountryLabel">{{ 'localization.country_label' | t }}</h2>
              {%- render 'country-localization', localPosition: 'AnnouncementCountry' -%}
            </div>
          {%- endform -%}
        </localization-form>
      {% endif %}

      {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
        <localization-form class="small-hide medium-hide">
          {%- form 'localization', id: 'AnnouncementLanguageForm', class: 'localization-form' -%}
            <div>
              <h2 class="visually-hidden" id="AnnouncementLanguageLabel">{{ 'localization.language_label' | t }}</h2>
              {%- render 'language-localization', localPosition: 'AnnouncementLanguage' -%}
            </div>
          {%- endform -%}
        </localization-form>
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "class": "announcement-bar-section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-4"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__1.content",
      "info": "t:sections.announcement-bar.settings.header__1.info"
    },
    {
      "type": "checkbox",
      "id": "show_social",
      "default": false,
      "label": "t:sections.announcement-bar.settings.show_social.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__2.content"
    },
    {
      "type": "checkbox",
      "id": "auto_rotate",
      "label": "t:sections.announcement-bar.settings.auto_rotate.label",
      "default": false
    },
    {
      "type": "range",
      "id": "change_slides_speed",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "t:sections.announcement-bar.settings.change_slides_speed.label",
      "default": 5
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__3.content",
      "info": "t:sections.announcement-bar.settings.header__3.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__4.content",
      "info": "t:sections.announcement-bar.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_language_selector.label"
    },
    {
      "type": "select",
      "id": "bg_colour",
      "label": "Background Colour",
      "options": [
        {
          "value": "bg-hl-green",
          "label": "Green"
        },
        {
          "value": "bg-hl-yellow",
          "label": "Yellow"
        },
        {
          "value": "bg-hl-red",
          "label": "Red"
        },
        {
          "value": "bg-hl-blue",
          "label": "Blue"
        },
        {
          "value": "bg-black",
          "label": "Black"
        }
      ],
      "default": "bg-hl-blue"
    }

  ],
  "blocks": [
    {
      "type": "text",
      "name": "Text Bar",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "t:sections.announcement-bar.blocks.announcement.settings.text.default",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        }
      ]
    },
    {
      "type": "countdown",
      "name": "Countdown Bar",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Sale",
          "label": "Sale Name"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        },
        {
          "type": "header",
          "content": "Time that sale ends",
          "info": "If date is set in the future, we use the date. If not, we make use of reset to calculate the target (Date + Y * Reset is the target date, where Y is the minimum possible for us to get a future date)."
        },
        {
          "type": "number",
          "default": 2025,
          "id": "year",
          "label": "Year"
        },
        {
          "type": "number",
          "default": 1,
          "id": "month",
          "label": "Month"
        },
        {
          "type": "number",
          "default": 1,
          "id": "day",
          "label": "Day"
        },
        {
          "type": "number",
          "default": 1,
          "id": "hour",
          "label": "Hour"
        },
        {
          "type": "number",
          "default": 0,
          "id": "min",
          "label": "Minute"
        },
        {
          "type": "number",
          "default": 0,
          "id": "sec",
          "label": "Second"
        },
        {
          "type": "number",
          "default": 1,
          "id": "reset",
          "label": "Reset every X days"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.announcement-bar.presets.name",
      "blocks": [
        {
          "type": "text"
        }
      ]
    }
  ]
}
{% endschema %}
